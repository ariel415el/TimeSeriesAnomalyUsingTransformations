5/6/2019:   - Started Git project.
			- Reproduced Paper's result on Mnist with 1 as normal digit

9/6/2019:   - Created a generic series trainer based on classification datasets.
12/6/2019:  - generic series does not converge yet. Tryin an alternative with continous functions.

15/6/2019   - continous functions : taining with linear fuctions as normal seem to converge. 
				* Model Seeem to overfeat sinusoids
				* Model can diffrentiate between linear functions and noise ( Not really, seem to overfeat)
				* Trying Elhanan suggestion for quantizing the serie and generating all permutations over segments
				* 22/6 still overfeats

29/6/2019: - Still with continous functions.
				 * Training on increasing linear (no bias) functions with 100 random permutations converged.
				 * Model is able to differentiate from sinus, normal noise and  decreasing functions
				 * Same results with 412 permutations
				 * Two major bugs were detected
				 	1: The fuction generator returned the same function in different next() calls
				 	2: I had dropout after the convolution layer created major and wierd gap between train and val (lower val)
				 * Model learned

5/7/2019   - Model  was able to learn linear sinusoid and differentioate between it and noise.
		   - Now trying to add local anomalies: the model is able yo detect when noise is added to 30% of a random segments.
		   - trying higher order sinusoids as last POC:
		   		only after browdening the FC latent layer the model was able to train. Again able to detect noise added to 30% of random segment

11/7/2019  - Built a new phisics engine and workflow to detect anomaly in simple synthetic videos of bouncing rectangles
12/7/2019  - Imported an architecture of 3Dcnn that is used to classifiy videos. model does not converge yet 
16/7/2019  - Side experiment to check the 3dcnn architectue in understanding videos:
			 Differentiate single bouncing ball videos with changing size from such with constant size
		   			* Training succedded on 10000/1000 train/val videos

16/7/2019  - Training the 3dcnn to learn permutaions over video frames of one object with specific figure, at test we compare reordering percentages
		   	  with other figures:
		   	  	* Model learned permutation on a square but failed to differentite in test from other 4 figures
		   	  	  This may be due to the fact that the details of the figures does not matter since one can regard them all as blobs and track them
		   	  	  Maybe a more suitable poc scenario is one where the network has to focus on the object details to suceed.
		   	  	  IDead: videos where the object chages shapes in a specific order.


16/7/2019   - I tried to differentiate betweeen two balls moving freely and two balls with an invisible wall between them. The model learned the permutations 
		   	 but I'm not sure if it can differentioate ~99% vs ~90% accurac
		   	 
17.7.2019   - Tryinh to add geometric transformation to the set of permutations. I first unrandimized the creation of the permutations and reproduces the results 				from above 89% vs 88%


27.7.2019 	- After consulting Yedid and reading his pape with liron i implemented the affine matrices scenario.
				I also changed the anomaly score to be minus log probability of the classification vector
				Couldn't differentioate anomalous videos with invisible wall (0.8 fpr when tpr is 1)
				results imprived to 0.73 fpr increasing from 32 to 100 random matrices

8.7.2018	- Training on single square with 3dcnn (Classifying 100 random mats) was so good that it was completely able to 				generalize to videos where the  square moves incontinously.. 

1.8.2019    - I tried replacing the 3dcnn with a feature extractor applied on all frames and then a conv net. Didn't work

16.8.2019   - Fixed a bug with affine transformations: apply random affine on image coordinate insdtead of pixel values

25.8.2019   - Rearranged all experiment in one python project (2d,1d data, frame permutations and affine transformation)